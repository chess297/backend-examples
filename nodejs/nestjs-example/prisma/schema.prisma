generator client {
  provider = "prisma-client-js"
  output   = "./clients/postgresql"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

// 用户表
model User {
  /// 用户ID，UUID格式
  id           String    @id(map: "user_pk") @unique @map("id") @db.VarChar(36)
  /// 用户名，最大长度50字符
  username     String    @db.VarChar(50)
  /// 用户邮箱，唯一
  email        String    @unique
  /// 密码哈希值
  password     String    @db.VarChar(255)
  /// 是否激活，默认值为true
  is_active    Boolean   @default(true)
  /// 关联的用户资料
  phone        String    @map("phone") @db.VarChar(20)
  country_code String    @map("country_code") @db.VarChar(5)
  address      String    @db.VarChar(255)
  /// 用户创建的任务
  tasks        Task[]
  /// 用户拥有的角色
  roles        Role[]
  /// 创建时间，自动设置为当前时间
  create_at    DateTime  @default(dbgenerated("NOW()")) @map("create_at") @db.Timestamptz()
  /// 更新时间，自动设置为当前时间
  update_at    DateTime  @default(dbgenerated("NOW()")) @map("update_at") @db.Timestamptz()
  /// 删除时间，软删除标记
  delete_at    DateTime? @map("delete_at") @db.Timestamptz()

  @@map("users")
}

// 角色表
model Role {
  id          String       @id @db.VarChar(36)
  name        String       @unique @db.VarChar(255)
  description String       @db.VarChar(255)
  users       User[]
  permissions Permission[]
  create_at   DateTime     @default(dbgenerated("NOW()")) @map("create_at") @db.Timestamptz()
  update_at   DateTime     @default(dbgenerated("NOW()")) @map("update_at") @db.Timestamptz()
  delete_at   DateTime?    @map("delete_at") @db.Timestamptz()

  @@map("roles")
}

// 资源操作类型
enum PermissionAction {
  manage
  create
  update
  delete
  read
}

// 权限表
model Permission {
  id          String             @id(map: "permission_pk") @unique @map("id") @db.VarChar(36)
  name        String             @db.VarChar(255) // 权限名称
  description String             @db.VarChar(255)
  actions     PermissionAction[] // 操作，例如："create", "update", "delete", "read"
  resource    String             @db.VarChar(255)
  // 关联的角色
  roles       Role[]
  // 关联的菜单
  menus       Menu[]
  // 关联的菜单组
  menu_groups MenuGroup[]
  create_at   DateTime           @default(dbgenerated("NOW()")) @map("create_at") @db.Timestamptz()
  update_at   DateTime           @default(dbgenerated("NOW()")) @map("update_at") @db.Timestamptz()
  delete_at   DateTime?          @map("delete_at") @db.Timestamptz()

  @@map("permissions")
}

model Task {
  id          String    @id @map("id") @db.VarChar(36)
  title       String    @db.VarChar(255)
  description String    @db.VarChar(255)
  completed   Boolean   @default(false)
  creator_id  String?   @unique @db.VarChar(36)
  creator     User?     @relation(fields: [creator_id], references: [id])
  create_at   DateTime  @default(dbgenerated("NOW()")) @map("create_at") @db.Timestamptz()
  update_at   DateTime  @default(dbgenerated("NOW()")) @map("update_at") @db.Timestamptz()
  delete_at   DateTime? @map("delete_at") @db.Timestamptz()

  @@map("tasks")
}

// 菜单表
model Menu {
  id          String       @id @unique @map("id") @db.VarChar(36)
  parent_id   String?      @map("parent_id") @db.VarChar(36)
  parent      Menu?        @relation("MenuParent", fields: [parent_id], references: [id])
  children    Menu[]       @relation("MenuParent")
  mate_id     String       @unique @map("mate_id") @db.VarChar(36)
  Mate        MenuMate     @relation(fields: [mate_id], references: [id])
  groups      MenuGroup[]
  permissions Permission[]
  create_at   DateTime     @default(dbgenerated("NOW()")) @map("create_at") @db.Timestamptz()
  update_at   DateTime     @default(dbgenerated("NOW()")) @map("update_at") @db.Timestamptz()
  delete_at   DateTime?    @map("delete_at") @db.Timestamptz()

  @@map("menus")
}

// 菜单元数据表
model MenuMate {
  id        String    @id @unique @map("id") @db.VarChar(36)
  title     String    @db.VarChar(255)
  path      String?   @unique @db.VarChar(255)
  icon      String    @db.VarChar(255)
  component String?   @db.VarChar(255)
  Menu      Menu?
  create_at DateTime  @default(dbgenerated("NOW()")) @map("create_at") @db.Timestamptz()
  update_at DateTime  @default(dbgenerated("NOW()")) @map("update_at") @db.Timestamptz()
  delete_at DateTime? @map("delete_at") @db.Timestamptz()

  @@map("menu_mates")
}

// 菜单组表
model MenuGroup {
  /// 菜单组ID，UUID格式
  id          String       @id @unique @map("id") @db.VarChar(36)
  /// 菜单组标题
  title       String       @db.VarChar(255)
  /// 菜单组图标
  icon        String       @db.VarChar(255)
  /// 菜单组描述
  description String       @db.VarChar(255)
  /// 关联的权限
  permissions Permission[]
  /// 包含的菜单项
  menus       Menu[]
  /// 创建时间，自动设置为当前时间
  create_at   DateTime     @default(dbgenerated("NOW()")) @map("create_at") @db.Timestamptz()
  /// 更新时间，自动设置为当前时间
  update_at   DateTime     @default(dbgenerated("NOW()")) @map("update_at") @db.Timestamptz()
  /// 删除时间，软删除标记
  delete_at   DateTime?    @map("delete_at") @db.Timestamptz()

  @@map("menu_groups")
}
